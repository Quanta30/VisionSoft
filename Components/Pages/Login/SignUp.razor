@page "/signup"
@using VisionSoft.Services
@inject NavigationManager Navigation
@inject SessionService SessionService
@namespace VisionSoft

@rendermode InteractiveServer

<PageTitle>Sign Up</PageTitle>

<div class="signup-container">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-md-5 col-lg-4">
                <div class="card">
                    <div class="card-body">
                        <div class="text-center mb-4">
                            <h2 class="signup-title">Create Account</h2>
                            <p class="signup-subtitle">Join us today</p>
                        </div>

                        <form @onsubmit="HandleSignUp" @onsubmit:preventDefault="true">
                            <div class="form-group">
                                <input type="email" 
                                       class="form-control" 
                                       placeholder="Email address"
                                       @bind="email"
                                       required />
                            </div>

                            <div class="form-group">
                                <input type="password" 
                                       class="form-control" 
                                       placeholder="Password"
                                       @bind="password"
                                       required />
                            </div>

                            <div class="form-group">
                                <input type="password" 
                                       class="form-control" 
                                       placeholder="Confirm password"
                                       @bind="confirmPassword"
                                       required />
                            </div>

                                

                            <button type="submit" class="btn btn-primary">
                                @if (isLoading)
                                {
                                    <span class="loading-spinner"></span>
                                    <span>Creating account...</span>
                                }
                                else
                                {
                                    <span>Create Account</span>
                                }
                            </button>
                        </form>

                        <div class="divider">
                            <span>or</span>
                        </div>

                        <div class="text-center">
                            <p class="login-text">
                                Already have an account? 
                                <a href="#" @onclick="() => ShowLogin()" class="login-link">Sign in</a>
                            </p>
                        </div>

                        @if (!string.IsNullOrEmpty(errorMessage))
                        {
                            <div class="alert alert-error">
                                @errorMessage
                            </div>
                        }

                        @if (!string.IsNullOrEmpty(successMessage))
                        {
                            <div class="alert alert-success">
                                @successMessage
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string email = "";
    private string password = "";
    private string confirmPassword = "";
    private bool agreeToTerms = false;
    private bool isLoading = false;
    private string errorMessage = "";
    private string successMessage = "";

    ClsDatabase clsDatabase = new ClsDatabase();

    private async Task HandleSignUp()
    {
        isLoading = true;
        errorMessage = "";
        successMessage = "";
        
        try
        {
            // Validation
            if (string.IsNullOrWhiteSpace(email))
            {
                errorMessage = "Email is required";
                return;
            }

            if (string.IsNullOrWhiteSpace(password))
            {
                errorMessage = "Password is required";
                return;
            }

            if (password != confirmPassword)
            {
                errorMessage = "Passwords do not match";
                return;
            }

            if (!agreeToTerms)
            {
                errorMessage = "Please agree to the Terms of Service";
                return;
            }

            // Check if user already exists
            string existingUser = clsDatabase.GetScalar(Config.UserTable, "Email", $"Email='{email}'");
            if (!string.IsNullOrEmpty(existingUser))
            {   
                errorMessage = "A user with this email already exists";
                return;
            }

            // Create new user
            DateTime createdDate = DateTime.Now;
            string id = clsDatabase.GenerateNextNo(Config.UserTable, "Id", "");

            clsDatabase.SaveRecord(
                Config.UserTable,
                "Email, Password, CreatedDate",
                $"'{email}', '{password}', '{createdDate.ToString("yyyy-MM-dd HH:mm:ss")}'");

            // Success
            successMessage = "Account created successfully! Redirecting to login...";
            
            // Delay and redirect
            await Task.Delay(2000);
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            errorMessage = $"Sign up failed: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowLogin()
    {
        Navigation.NavigateTo("/login");
    }
}