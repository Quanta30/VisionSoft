@using System.Data
@rendermode InteractiveServer

<div class="customer-master-section">
    <hr class="fade-divider my-4" />
    <h5 class="mb-3">Customer Details</h5>
    
    <!-- Customer Master fields -->
    <T_Row>
        <T_Input Title="Customer Code *" ReadOnly="true"
                 @bind-Value="@customerModel.dict["CustomerCode"]"
                 ColSize="col-md-3" />
        <T_Input Title="Customer Name *"
                 @bind-Value="@customerModel.dict["CustomerName"]"
                 MaxLength="1000" ColSize="col-md-6"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 1))
                 @ref="firstCustomerReference" />
        <T_Input Title="City" @bind-Value="@customerModel.dict["CustomerCity"]" 
                 MaxLength="100" ColSize="col-md-3"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 2)) />
    </T_Row>
    
    <T_Row>
        <T_Input Title="District" @bind-Value="@customerModel.dict["CustomerDistrict"]" 
                 MaxLength="100" ColSize="col-md-3"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 3)) />
        <T_Input Title="Phone No." @bind-Value="@customerModel.dict["CustomerPhoneNo"]" 
                 MaxLength="50" ColSize="col-md-3"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 4)) />
        <T_Input Title="Mobile No." @bind-Value="@customerModel.dict["CustomerMobileNo"]" 
                 MaxLength="50" ColSize="col-md-3"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 5)) />
        <T_Input Title="Email" @bind-Value="@customerModel.dict["CustomerEmail"]" 
                 MaxLength="100" ColSize="col-md-3"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 6)) />
    </T_Row>
    
    <T_Row>
        <T_Input Title="GST No." @bind-Value="@customerModel.dict["CustomerGSTNo"]" 
                 MaxLength="50" ColSize="col-md-4"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 7)) />
        <T_Input Title="PAN No." @bind-Value="@customerModel.dict["CustomerPanNo"]" 
                 MaxLength="50" ColSize="col-md-4"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 8)) />
        <T_Input Title="State Code" @bind-Value="@customerModel.dict["CustomerStateCode"]" 
                 MaxLength="10" ColSize="col-md-4"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 9)) />
    </T_Row>
    
    <T_Row>
        <T_Input Title="Credit Days" Type="number" 
                 @bind-Value="@customerModel.dict["CustomerCreditDays"]" ColSize="col-md-3"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 10)) />
        <T_Input Title="Address" @bind-Value="@customerModel.dict["CustomerAddress"]" 
                 MaxLength="500" ColSize="col-md-6"
                 GetInputReference="GetInputReference"
                 NextReference=@(GetRef(StartReferenceIndex + 11)) />
        <T_Checkbox Title="Login Flag"
                    @bind-Value="@customerModel.dict["Loginflag"]"
                    ColSize="col-md-3"
                    GetInputReference="GetInputReference"
                    NextReference=@(GetRef(0)) />
    </T_Row>
</div>

@code {
    [Parameter] public Model customerModel { get; set; }
    [Parameter] public EventCallback<Model> customerModelChanged { get; set; }
    [Parameter] public Action<ElementReference> GetInputReference { get; set; }
    [Parameter] public int StartReferenceIndex { get; set; }
    
    private ClsDatabase db = new ClsDatabase();
    private T_Input firstCustomerReference;
    
    protected override void OnInitialized()
    {
        if (customerModel == null)
        {
            customerModel = new Model("CustomerMaster", "CustomerCode");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && firstCustomerReference != null)
        {
            await firstCustomerReference.Focus();
        }
    }

    private ElementReference GetRef(int idx)
    {
        // This will be handled by the parent component
        return default;
    }
    
    // Method to validate customer fields
    public List<string> ValidateCustomer()
    {
        var errors = new List<string>();
        
        if (string.IsNullOrWhiteSpace(customerModel.dict["CustomerName"]))
            errors.Add("Customer Name is required");
            
        return errors;
    }
    
    // Method to clear customer data
    public void ClearCustomer()
    {
        customerModel.Clear();
    }
    
    // Method to populate customer data
    public void PopulateCustomer(DataRow row)
    {
        customerModel.Populate(row);
    }
    
    // Method to save customer data
    public bool SaveCustomer()
    {
        return customerModel.Save();
    }
    
    // Method to update customer data
    public bool UpdateCustomer()
    {
        return customerModel.Update();
    }
}