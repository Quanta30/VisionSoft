@*
  This component, T_Row, is a simple but powerful wrapper for a Bootstrap row (`<div class="row">`).
  It simplifies the process of applying common layout utility classes for spacing,
  alignment, and gutters without needing to write them all out manually.
*@
@rendermode InteractiveServer

<!--
  The final CSS class string is constructed directly in the markup.
  Blazor will intelligently combine the provided classes, ignoring any that are empty.
  This is a clean and reactive way to build dynamic CSS class lists.
-->
<div class="@FinalCssClass" style="@Style">
    @ChildContent
</div>

@code {
    // =================================================================================
    // PARAMETERS
    // =================================================================================

    /// <summary>
    /// The content to be rendered inside the row (e.g., column divs).
    /// </summary>
    [Parameter] public RenderFragment? ChildContent { get; set; }

    /// <summary>
    /// Any additional custom CSS classes to apply to the row.
    /// </summary>
    [Parameter] public string CssClass { get; set; } = "";

    /// <summary>
    /// Any custom inline styles to apply to the row.
    /// </summary>
    [Parameter] public string Style { get; set; } = "";

    /// <summary>
    /// Sets the vertical margin (e.g., "mb-3" for margin-bottom).
    /// </summary>
    [Parameter] public string Spacing { get; set; } = "";

    /// <summary>
    /// Sets the vertical alignment of items within the row (e.g., "align-items-center").
    /// </summary>
    [Parameter] public string Alignment { get; set; } = "";

    /// <summary>
    /// Sets the gutter (spacing between columns) size (e.g., "g-2", "g-3").
    /// </summary>
    [Parameter] public string Gutters { get; set; } = "";

    // =================================================================================
    // PRIVATE PROPERTIES
    // =================================================================================

    /// <summary>
    /// A computed property that combines all the provided CSS class parameters into a single string.
    /// </summary>
    private string FinalCssClass => string.Join(" ", 
        "row", 
        Spacing, 
        Alignment, 
        Gutters, 
        CssClass
    ).Trim(); // .Trim() handles any potential leading/trailing spaces.
}
