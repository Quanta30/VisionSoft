@using System.Data
@using System.Data

@if (dataTable == null || dataTable.Rows.Count == 0)
{
    <div class="text-center text-muted">No data available</div>
}
else
{
    <div class="table-responsive" style="overflow:auto; max-width:calc(100vw - 130px); max-height: @MaxHeight ;">
        <table class="table table-bordered table-hover">
            <thead class="table-light sticky-top">
                <tr>

                    @if (NewColumnHeader != null){
                        @NewColumnHeader
                    }
                    @foreach (DataColumn col in dataTable.Columns)
                    {
                        <th>@col.ColumnName</th>
                    }
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < dataTable.Rows.Count; i++)
                {   
                    rowIndex = i;
                    <tr class="@(selectedRowIndex == rowIndex ? "table-primary" : "")">
                        
                        @if (NewColumnValue != null){
                            @NewColumnValue(new RowContext {RowIndex = rowIndex})
                        }
                        @foreach (DataColumn col in dataTable.Columns)
                        {
                            <td>@dataTable.Rows[i][col]</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>

}



@code{
    [Parameter] public DataTable dataTable{get; set;}
    [Parameter] public RenderFragment? NewColumnHeader{get; set;}
    [Parameter] public RenderFragment<RowContext>? NewColumnValue{get; set;}
    [Parameter] public string PrimaryKey {get; set;}

    [Parameter] public string MaxHeight{get; set;} = "400px";
    private int rowIndex = 0;
    private int selectedRowIndex = -1;

        // Context class to pass row data
    public class RowContext
    {
                public int RowIndex { get; set; }
    }
}