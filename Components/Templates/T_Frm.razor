@using Microsoft.AspNetCore.Components

<div class="container-fluid p-0"  tabindex="0">
    <div class="card border shadow-sm h-100 d-flex flex-column">
        @if (!string.IsNullOrEmpty(FormName))
        {
            <div class="card-header bg-light border-bottom flex-shrink-0">
                <div class="row align-items-center">
                    <div class="col">
                        <h5 class="mb-0 text-secondary fw-normal">
                            <i class="bi bi-file-earmark-text me-2 text-muted"></i>
                            @FormName
                        </h5>
                    </div>
                    @if(OnFormTypeChange.HasDelegate)
                    {
                        <div class="col-auto">
                            <select class="form-select form-select-sm" @onchange="HandleFormTypeChange">
                                <option value="">Empty</option>
                                <option selected value="A">Type A</option>
                                <option value="B">Type B</option>
                            </select>
                        </div>
                    }
                </div>
            </div>
        }
        
        <div class="card-body p-4 flex-grow-1 overflow-auto" style="max-height:75vh;overflow:hidden">
            @ChildContent
        </div>
 
        @if (CardFooterContent != null)
        {
            <div class="card-footer bg-light border-top flex-shrink-0 py-1 px-3">
                <div class="d-flex justify-content-end gap-2">
                    @CardFooterContent
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public string FormName { get; set; } = string.Empty;
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public RenderFragment? CardFooterContent { get; set; }
    [Parameter] public EventCallback<string> OnFormTypeChange { get; set; }

    public async Task HandleFormTypeChange(ChangeEventArgs e)
    {
        if (OnFormTypeChange.HasDelegate)
        {   
            Console.WriteLine(e.Value.ToString());
            await OnFormTypeChange.InvokeAsync(e.Value.ToString());
        }
    }

    public int index = 0;
}