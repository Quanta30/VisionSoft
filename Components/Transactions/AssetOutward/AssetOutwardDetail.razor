@using System.Data
@namespace VisionSoft.Components.Transactions.AssetOutward
@rendermode InteractiveServer
<tr>
    <td>
        <T_Button Text="X" btnType="Danger" OnClick="HandleRemove" Style=""/>
    </td>
    <td>
        @SerialNo
    </td>
    <td>
        <div style="width:200px">
            <T_Input Title="" Layout="3" @bind-Value="@model.dict["ItemName"]" Placeholder="Enter item name"/>
        </div>
    </td>
    <td>
        <T_RInput Title="" Layout="3" TableName="PhysicalStockView" PrimaryColumn="ProductName" DisplayColumn="ProductName" Value=@StockName ValueChanged="OnStockChanged"/>
    </td>
    <td>
      <div style="width:70px">
            <T_Input Title="" Layout="3" @bind-Value="@model.dict["Quntity"]" Placeholder=""/>
      </div>  
    </td>
</tr>

@code {
    [Parameter] public EventCallback<int> OnRemove{get; set;}
    [Parameter] public int SerialNo {get; set;}
    [Parameter] public string EntryNo {get; set;}
    [Parameter] public DataRow InitialDataRow { get; set; }

    private Model model = new Model("AssetOutwardDetails", "");
    private ClsDatabase db = new ClsDatabase();
    public string StockName = "";

    protected override void OnParametersSet(){
        if (InitialDataRow != null)
        {
            model.Populate(InitialDataRow);
            StockName = StockIdToName(model.dict["StockId"]);
        }
        else
        {
            model.dict["EntryNo"] = EntryNo;
            model.dict["SrNo"] = SerialNo.ToString();
        }
    }

    public string StockNameToId(string sn){
        string pc = db.GetScalar($"Select ProductCode from ProductMaster where ProductName = '{sn}'");
        string Id = db.GetScalar($"Select StockId from PhysicalStock where ProductCode = '{pc}'");
        return Id;
    }
    public string StockIdToName(string Id){
        string pc = db.GetScalar($"Select ProductCode from PhysicalStock where StockId = '{Id}'");
        string name = db.GetScalar($"Select ProductName from ProductMaster where ProductCode = '{pc}'");
        return name;
    }
    private void OnStockChanged(string sname)
    {   
        model.dict["StockId"] = StockNameToId(sname);
        StockName = sname;
        UpdateStockDetails();
        StateHasChanged();
    }

    private void UpdateStockDetails()
    {
        if (!string.IsNullOrEmpty(model.dict["StockId"]) && model.dict["StockId"] != "0")
        {

                model.dict["ItemName"] = StockIdToName(model.dict["StockId"]);

        }
    }

    public async Task HandleRemove(){
        await OnRemove.InvokeAsync(SerialNo);
    }

    // Called by parent during save
    public bool SaveDetail(){
        try{
            model.dict["EntryNo"] = EntryNo;
            model.dict["SrNo"] = SerialNo.ToString();

            // Validation
            if(string.IsNullOrEmpty(model.dict["StockId"]) || model.dict["StockId"] == "0"){
                Console.WriteLine("Cannot save - no stock selected");
                return false;
            }

            bool saved = model.Save();
            return saved;
        }
        catch(Exception ex){
            Console.WriteLine($"Error saving detail {SerialNo}: {ex.Message}");
            return false;
        }
    }

      protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(model.dict["Quntity"])) model.dict["Quntity"] = "1";
        UpdateStockDetails();
    }
}