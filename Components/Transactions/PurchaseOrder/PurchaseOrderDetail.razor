@using System.Data
@namespace VisionSoft.Components.Transactions.PurchaseOrder
@rendermode InteractiveServer
<tr>
    <td>
        <T_Button Text="X" btnType="Danger" OnClick="HandleRemove" Style=""/>
    </td>
    <td>
        @SerialNo
    </td>
    <td>
        <T_RInput Title="" Layout="3" TableName="ProductMaster" PrimaryColumn="ProductCode" DisplayColumn="ProductName" Value="@model.dict["ProductCode"]" ValueChanged="OnProductChanged"/>
    </td>
    <td>
      <div style="width:70px">
            <T_Input Title="" Layout="3" @bind-Value="@model.dict["Quantity"]" Placeholder="" ChangeFunction="OnChange"/>
      </div>  
    </td>
    <td>
      <div style="width:70px">
            <T_Input Title="" Layout="3" @bind-Value="@model.dict["Rate"]" Placeholder="" ChangeFunction="OnChange"/>
      </div>     
    </td>
    <td>
        @amount.ToString("F2")
    </td>
</tr>

@code {
    [Parameter] public EventCallback<int> OnRemove{get; set;}
    [Parameter] public int SerialNo {get; set;}
    [Parameter] public string PONumber {get; set;}
    [Parameter] public EventCallback<int> OnCalculationChanged{get; set;}
    [Parameter] public DataRow InitialDataRow { get; set; }

    private Model model = new Model("PurchaseOrderDetails", "");
    public float amount = 0;
    private ClsDatabase db = new ClsDatabase();

    protected override void OnParametersSet()
    {
            model.dict["PONumber"] = PONumber;
            model.dict["POSrNo"] = SerialNo.ToString();

            Calculate();
    }

    protected override void OnAfterRender(bool firstRender){
        if (InitialDataRow != null)
        {
            model.Populate(InitialDataRow);
            StateHasChanged();
        }
    }

    private void OnProductChanged(string productCode)
    {   
        model.dict["ProductCode"] = productCode;
        Calculate();
        StateHasChanged();
    }



    public async Task HandleRemove(){
        await OnRemove.InvokeAsync(SerialNo);
    }

    // Called by parent during save
    public bool SaveDetail(){
        try{
            model.dict["PONumber"] = PONumber;
            model.dict["POSrNo"] = SerialNo.ToString();
            Calculate();
            bool saved = model.Save();
            return saved;
        }
        catch(Exception ex){
            Console.WriteLine($"Error saving detail {SerialNo}: {ex.Message}");
            return false;
        }
    }

    private void Calculate(){
        if (float.TryParse(model.dict["Rate"], out float rate) &&
            float.TryParse(model.dict["Quantity"], out float quantity))
        {
            amount = rate * quantity;
            model.dict["Amount"] = amount.ToString("F2");
        }
        else
        {
            amount = 0f;
            model.dict["Amount"] = "0";
        }
    }

    public void OnChange(string value){
        Calculate();
        OnCalculationChanged.InvokeAsync(SerialNo);
    }

    public float GetAmount() => amount;

    protected override void OnInitialized()
    {
        if (string.IsNullOrEmpty(model.dict["Rate"])) model.dict["Rate"] = "0";
        if (string.IsNullOrEmpty(model.dict["Quantity"])) model.dict["Quantity"] = "1";
        Calculate();
    }
}